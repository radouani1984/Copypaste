from sqlalchemy import select, or_, func, literal

@staticmethod
async def find_permissions(db: AsyncSession, user_id: str, path: str):
    path_literal = literal(path)  # On "fixe" la chaîne pour l'utiliser dans la requête SQL

    query = (
        select(
            user_permission_association.c.ttl,
            user_permission_association.c.created_at,
            user_permission_association.c.user_id,
            Permission.name
        )
        .select_from(user_permission_association)
        .join(Permission, Permission.permission_id == user_permission_association.c.permission_id)
        .join(QuantPath, QuantPath.path_id == Permission.path_id)
        .where(user_permission_association.c.user_id == user_id)
        .where(
            or_(
                path_literal.like(QuantPath.path),                             # Exact match
                path_literal.like(func.concat(QuantPath.path, '%')),           # Ex: '/my/base' LIKE '/my/base%'
                path_literal.like(func.replace(QuantPath.path, '*', '%'))      # Wildcard '*' => '%'
            )
        )
    )

    result = await db.execute(query)
    return result.fetchall()
